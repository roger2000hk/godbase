* update readme
** add Cmp, Iter & Any apis
** list all constructors

* update CHANGES

* commit & post update

* add Hash / HashSlots
** one Hash imp
** add HashSlots type for each chain type
*** add GetSlot(i, create) Any method
** init slots lazily in GetSlot()

* add map slot types
** add constructors NewSkipMap & NewESkipMap with maps
*** compare perf

* add Any.Clone(TestFn)
** panic for embedded imps
** only include elems for which test returns true

* add Any.CutAll(other Any, TestFn)
** return difference as new set
** only move elems for which test returns true
** operate within slot for hash maps

* add Any.Update(start, end, update UpdateFn) int
** type UpdateFn func(k, v) (v, bool)
** delete if bool == false, otherwise update values
** return nr of deleted

* add Any.InsertAll(other Any, TestFn)
** opimized iter insert where possible
*** keep iter around and set to nil if check if next < prev

* add Rec type
** wrap maps.Any

* add locks package
** copy RW/Ctx from old
*** rename RW to Lock

* add locks.Locker
** keep HashMaps of RecId => Lock
*** one for readers, one for writers
** protect maps with Lock 

* copy maps to sets package
** no multi capability
** compare perf
