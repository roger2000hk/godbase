* add reverse idx for offsets
** Idx.Basic/Reverse
** extend Any
** use id as key & store val for col 

* add Tbl.Delete()

* add idx.Dump/Load like Tbl

* add events

* add README.md to idxs

* add remento project
** check old

* run rw lock test with race tool

* update poorslab

* add cols.Bytes
* add cols.Float64

* add tbls.Wrap

* add tbls.Log wrap
** keep []Rec queue
** insert DeleteRec on delete

* add testfn to Delete
** only delete if testfn nil / returns true
** add DeleteAll(key) int

* add RecCol

* add ListCol
** base on std list
** take col type as param

* ---

* add find loop in both maps in runCutTests

* add maps.RWHash
** keep one RWMutex per slot

* ---

* add Any.Clone(MapFn)
** panic for embedded imps
** only include elems for which fn returns non nil key

* copy maps to sets package
** no multi capability
** compare perf

* add locks.Locker
** keep HashMaps of RecId => Lock
*** one for readers, one for writers
** protect maps with Lock 

* add hash resizing

* add sort resizing
