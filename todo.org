BenchmarkBasicMap-4                     2000000000               0.01 ns/op
BenchmarkBasicSort-4                    2000000000               0.04 ns/op
BenchmarkBasicSlab-4                    2000000000               0.04 ns/op
BenchmarkBasicESort-4                   2000000000               0.03 ns/op
BenchmarkBasicSlabHash-4                2000000000               0.01 ns/op
BenchmarkBasicESortHash-4               1000000000               0.02 ns/op
BenchmarkBasicSortBasicHash-4           2000000000               0.01 ns/op
BenchmarkBasicESortBasicHash-4          2000000000               0.01 ns/op
BenchmarkBasicSortMapHash-4             1000000000               0.03 ns/op
BenchmarkBasicESortMapHash-4            1000000000               0.03 ns/op
BenchmarkFullSort-4                     1000000000               0.08 ns/op
BenchmarkFullSlab-4                     1000000000               0.08 ns/op
BenchmarkFullESort-4                    2000000000               0.03 ns/op
BenchmarkFullSlabHash-4                 2000000000               0.01 ns/op
BenchmarkFullESortHash-4                1000000000               0.03 ns/op
BenchmarkFullSortBasicHash-4            1000000000               0.02 ns/op
BenchmarkFullESortBasicHash-4           1000000000               0.03 ns/op
BenchmarkFullSortMapHash-4              2000000000               0.02 ns/op
BenchmarkFullESortMapHash-4             2000000000               0.02 ns/op

* add RecCol + test
** read/write literal recs
** cols/rec.go
*** move all cols to separate files

* change Key interface from Less to Cmp
** use Cmp instead of == for comparing keys in map/set imps
** compare perf
** fix idxs multi tests
** commit


* add Set.Shrink to remove end nils

* add sets.Hash
** use array of godbase.Set & Alloc

* add sets.HashHash
** use array of Hash

* replace maps.hash slot mess with one file per imp
** Hash, ESortHash, SortHash, MapHash, HashHash

* add Set.Clone() Set
** alloc new and copy for Sort
** delegate for Hash
*** only call slot.Clone() if len > 0

* add sets.Suffix
** copy maps

* add sets.Wrap

* --- post sets

* add Idx.FindRange(start, end key, out *sets.Hash) *sets.Hash
** start/end optional

* change RcUnlimited to enum RcCapacType
** Single/Limited/Unlimited
** how to implement enum? EnumCol?

* implement price calculation
** add Rc.Prices(cx, start, end) []Price
** add []Price.Calc(rc, start, end) []Price
*** sum parts of prices according to part of total time span on with minute precision
*** break on new prod
*** clear recid in returned recs
*** break if gap between start/end
*** allow overlapping prices
*** add test** add Rc.SumPrices(cx, start, end) []Price


* add godbase.dbs package
** add godbase.Db with MapAlloc
** add dbs.Basic
** replaces global MapAlloc in remento

* add sets.MapHash/HashSlots like map
 
* add *Rc.NewResv(start, end, capac) *Resv
** add test

* add *Rc.Update(start, end, total, avail) (big.Rat, error)
** return min of avail / total if total != 0
* add resv test

* add resv loop perf test with unlimited resources

* load settings table to decide amount scale in remento
** create path if it doesn't exist in db.init
** slurp setting tbl if exists
** otherwise init with defaults
** call in remento_test.init()

* add ref test

* rename fix.New to fix.NewInt64
* add fix.NewFloat64
* rename fix.Init to fix.SetBig
* add SetFloat64 / SetInt64
* add fix benchmark based on big.Rat

* add SliceCol
** take col type as param to cols.Slice()

* remento
** add offset idx
** add slice(Ref) col ResvItems

* add MapCol
** take two col types as params to cols.Map()

* implement Dump/Load for idxs.Reverse
** copy tbls

* add Tbl.Delete()

* add remento project
** check old

* add tbls.Wrap

* add Cx
** take cx param in tbl.Insert/Delete
** take cx param in idx.Insert/Delete

* add tbls.Log wrap
* log delete/insert to disk

* add testfn to Delete
** only delete if testfn nil / returns true
** add DeleteAll(key) int

* add ListCol
** base on std list
** take col type as param

* add find loop in both maps in runCutTests

* copy maps to sets package
** no multi capability
** compare perf

* add hash slot resizing

* add sort level resizing

* update poorslab
