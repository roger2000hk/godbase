* add cols.Bool
** add rec methods
** add to tests

* add Tbl.Delete()

* add multi ordered idx test
** add Find(start Iter, key Key, id RecId) (maps.Iter, bool)
** start & id are optional
** forward to map Find
 
* rename Skip to Sort
** grep all mentions of skip in project
** NewSort, NewESort, NewHash, NewEHash
** rename SkipAlloc to Alloc
** update readme & changes

* add README.md to idxs

* run rw lock test with race tool

* update poorslab

* add cols.Bytes
* add cols.Float64

* add tbls.Wrap

* add tbls.Log wrap
** keep []Rec queue
** insert DeleteRec on delete

* add testfn to Delete
** only delete if testfn nil / returns true
** add DeleteAll(key) int

* add RecCol

* add ListCol
** base on std list
** take col type as param

* ---

* add maps.Any.Clone(start, end, MapFn)
** like Cut, but clone elems

* add find loop in both maps in runCutTests

* add maps.RWHash
** keep one RWMutex per slot

* rename multi_test to full_test

* ---

* add idx support
** Idx interface
** BasicIdx wraps maps.Any
** provide range ops
*** runs within slot for hash types


* add Any.Clone(MapFn)
** panic for embedded imps
** only include elems for which fn returns non nil key

* copy maps to sets package
** no multi capability
** compare perf

* add locks.Locker
** keep HashMaps of RecId => Lock
*** one for readers, one for writers
** protect maps with Lock 

* add hash resizing

* add sort resizing
